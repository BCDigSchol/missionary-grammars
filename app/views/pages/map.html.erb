<!-- Banner -->
<section id="banner">
  <header>
    <h2>Map</h2>
  </header>
  <p>This map allows the corpus to be explored geographically. It organizes metadata for the texts into two information
    layers. Blue plots the various places of publication, and associates each point with the text(s) published at that
    location. Red plots the loci of the different target language speech communities represented in the corpus, and
    associates each point with the text(s) that comment on that language. </p>
  <p>The purpose of this map visualization is to allow the researcher or user to explore the corpus through space; no
    static image can ever fully capture the shifting political landscape of colonial Africa. For a more thorough
    representation of Africa’s shifting political borders, conflicts, and demographics, between 1879–2002, please
    consult the Animated Atlas of African History; or, for a period of map of missionary activity in Africa, the Carte
    des Missions Catholique en Afrique (1889).
  </p>
  <br>
  <br>
</section>

<div id="map" ></div>

<!-- include cartodb.js library -->
<script src="http://libs.cartocdn.com/cartodb.js/v3/3.15/cartodb.js"></script>

<script>
  function main() {
    cartodb.createVis('map', 'https://calhound.cartodb.com/api/v2/viz/6131a10c-bae6-11e5-8960-0ef24382571b/viz.json', {
          shareable: true,
          title: true,
          description: true,
          search: false,
          tiles_loader: true,
          center_lat: 6.79,
          center_lon: 20.17,
          zoom: 5
        })
        .done(function (vis, layers) {
          // layer 0 is the base layer, layer 1 is cartodb layer
          // setInteraction is disabled by default
          layers[1].setInteraction(true);
          layers[1].on('featureOver', function (e, latlng, pos, data) {
            cartodb.log.log(e, latlng, pos, data);
          });
          // you can get the native map to work with it
          var map = vis.getNativeMap();
          // now, perform any operations you need
          // map.setZoom(3);
          // map.panTo([50.5, 30.5]);
        })
        .error(function (err) {
          console.log(err);
        });
  }
  window.onload = main;
</script>